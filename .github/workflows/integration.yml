name: integration

on:
  push:
    branches: trunk
  pull_request:
    branches: trunk

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, cc: gcc }
          - { os: windows-latest, cc: cl }
          - { os: macos-latest, cc: clang }
    env:
      BUILD_TYPE: ${{ github.event_name == 'pull_request' && 'Debug' || 'Release' }}
      CONAN_V2_MODE: 1
      CONAN_SYSREQUIRES_MODE: enabled
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: build
          key: ${{ matrix.config.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('conanfile.py', 'CMakeLists.txt') }}
      - uses: turtlebrowser/get-conan@main
      - run: conan install . -if build -s build_type=${{ env.BUILD_TYPE }} -b missing
      - run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - run: cmake --build build --config ${{ env.BUILD_TYPE }}
      - run: tar -cvf space-escape.tar -C build/bin .
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.os }}-${{ env.BUILD_TYPE }}
          path: space-escape.tar